{
    "type": "object",
    "properties": {
        "Action": {
            "required": true,
            "type": "string"
        },
        "Version": {
            "required": true,
            "type": "string"
        },
        "requestBody": {
            "properties": {
                "AlgorithmDescription": {
                    "description": "A description of the algorithm.",
                    "maxLength": 1024,
                    "pattern": "[\\p{L}\\p{M}\\p{Z}\\p{S}\\p{N}\\p{P}]*",
                    "type": "string"
                },
                "AlgorithmName": {
                    "description": "The name of the algorithm.",
                    "maxLength": 63,
                    "minLength": 1,
                    "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*$",
                    "type": "string"
                },
                "CertifyForMarketplace": {
                    "description": "Whether to certify the algorithm so that it can be listed in AWS Marketplace.",
                    "type": "boolean"
                },
                "InferenceSpecification": {
                    "description": "<p>Specifies details about inference jobs that the algorithm runs, including the following:</p> <ul> <li> <p>The Amazon ECR paths of containers that contain the inference code and model artifacts.</p> </li> <li> <p>The instance types that the algorithm supports for transform jobs and real-time endpoints used for inference.</p> </li> <li> <p>The input and output content formats that the algorithm supports for inference.</p> </li> </ul>",
                    "properties": {
                        "Containers": {
                            "description": "The Amazon ECR registry path of the Docker image that contains the inference code.",
                            "items": {
                                "description": "Describes the Docker container for the model package.",
                                "properties": {
                                    "ContainerHostname": {
                                        "description": "The DNS host name for the Docker container.",
                                        "maxLength": 63,
                                        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
                                        "type": "string"
                                    },
                                    "Image": {
                                        "description": "<p>The Amazon EC2 Container Registry (Amazon ECR) path where inference code is stored.</p> <p>If you are using your own custom algorithm instead of an algorithm provided by Amazon SageMaker, the inference code must meet Amazon SageMaker requirements. Amazon SageMaker supports both <code>registry/repository[:tag]</code> and <code>registry/repository[@digest]</code> image path formats. For more information, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms.html\">Using Your Own Algorithms with Amazon SageMaker</a>.</p>",
                                        "maxLength": 255,
                                        "pattern": "[\\S]+",
                                        "type": "string"
                                    },
                                    "ImageDigest": {
                                        "description": "An MD5 hash of the training algorithm that identifies the Docker image used for training.",
                                        "maxLength": 72,
                                        "pattern": "^[Ss][Hh][Aa]256:[0-9a-fA-F]{64}$",
                                        "type": "string"
                                    },
                                    "ModelDataUrl": {
                                        "description": "The Amazon S3 path where the model artifacts, which result from model training, are stored. This path must point to a single <code>gzip</code> compressed tar archive (<code>.tar.gz</code> suffix).",
                                        "maxLength": 1024,
                                        "pattern": "^(https|s3)://([^/]+)/?(.*)$",
                                        "type": "string"
                                    },
                                    "ProductId": {
                                        "description": "The AWS Marketplace product ID of the model package.",
                                        "maxLength": 256,
                                        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Image"
                                ],
                                "type": "object"
                            },
                            "maxItems": 1,
                            "minItems": 1,
                            "type": "array"
                        },
                        "SupportedContentTypes": {
                            "description": "The supported MIME types for the input data.",
                            "items": {
                                "maxLength": 256,
                                "pattern": ".*",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "SupportedRealtimeInferenceInstanceTypes": {
                            "description": "A list of the instance types that are used to generate inferences in real-time.",
                            "items": {
                                "enum": [
                                    "ml.t2.medium",
                                    "ml.t2.large",
                                    "ml.t2.xlarge",
                                    "ml.t2.2xlarge",
                                    "ml.m4.xlarge",
                                    "ml.m4.2xlarge",
                                    "ml.m4.4xlarge",
                                    "ml.m4.10xlarge",
                                    "ml.m4.16xlarge",
                                    "ml.m5.large",
                                    "ml.m5.xlarge",
                                    "ml.m5.2xlarge",
                                    "ml.m5.4xlarge",
                                    "ml.m5.12xlarge",
                                    "ml.m5.24xlarge",
                                    "ml.c4.large",
                                    "ml.c4.xlarge",
                                    "ml.c4.2xlarge",
                                    "ml.c4.4xlarge",
                                    "ml.c4.8xlarge",
                                    "ml.p2.xlarge",
                                    "ml.p2.8xlarge",
                                    "ml.p2.16xlarge",
                                    "ml.p3.2xlarge",
                                    "ml.p3.8xlarge",
                                    "ml.p3.16xlarge",
                                    "ml.c5.large",
                                    "ml.c5.xlarge",
                                    "ml.c5.2xlarge",
                                    "ml.c5.4xlarge",
                                    "ml.c5.9xlarge",
                                    "ml.c5.18xlarge"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "SupportedResponseMIMETypes": {
                            "description": "The supported MIME types for the output data.",
                            "items": {
                                "maxLength": 1024,
                                "pattern": "^[-\\w]+\\/.+$",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "SupportedTransformInstanceTypes": {
                            "description": "A list of the instance types on which a transformation job can be run or on which an endpoint can be deployed.",
                            "items": {
                                "enum": [
                                    "ml.m4.xlarge",
                                    "ml.m4.2xlarge",
                                    "ml.m4.4xlarge",
                                    "ml.m4.10xlarge",
                                    "ml.m4.16xlarge",
                                    "ml.c4.xlarge",
                                    "ml.c4.2xlarge",
                                    "ml.c4.4xlarge",
                                    "ml.c4.8xlarge",
                                    "ml.p2.xlarge",
                                    "ml.p2.8xlarge",
                                    "ml.p2.16xlarge",
                                    "ml.p3.2xlarge",
                                    "ml.p3.8xlarge",
                                    "ml.p3.16xlarge",
                                    "ml.c5.xlarge",
                                    "ml.c5.2xlarge",
                                    "ml.c5.4xlarge",
                                    "ml.c5.9xlarge",
                                    "ml.c5.18xlarge",
                                    "ml.m5.large",
                                    "ml.m5.xlarge",
                                    "ml.m5.2xlarge",
                                    "ml.m5.4xlarge",
                                    "ml.m5.12xlarge",
                                    "ml.m5.24xlarge"
                                ],
                                "type": "string"
                            },
                            "minItems": 1,
                            "type": "array"
                        }
                    },
                    "required": [
                        "Containers",
                        "SupportedTransformInstanceTypes",
                        "SupportedRealtimeInferenceInstanceTypes",
                        "SupportedContentTypes",
                        "SupportedResponseMIMETypes"
                    ],
                    "type": "object"
                },
                "TrainingSpecification": {
                    "description": "<p>Specifies details about training jobs run by this algorithm, including the following:</p> <ul> <li> <p>The Amazon ECR path of the container and the version digest of the algorithm.</p> </li> <li> <p>The hyperparameters that the algorithm supports.</p> </li> <li> <p>The instance types that the algorithm supports for training.</p> </li> <li> <p>Whether the algorithm supports distributed training.</p> </li> <li> <p>The metrics that the algorithm emits to Amazon CloudWatch.</p> </li> <li> <p>Which metrics that the algorithm emits can be used as the objective metric for hyperparameter tuning jobs.</p> </li> <li> <p>The input channels that the algorithm supports for training data. For example, an algorithm might support <code>train</code>, <code>validation</code>, and <code>test</code> channels.</p> </li> </ul>",
                    "properties": {
                        "MetricDefinitions": {
                            "description": "A list of <code>MetricDefinition</code> objects, which are used for parsing metrics generated by the algorithm.",
                            "items": {
                                "description": "Specifies a metric that the training algorithm writes to <code>stderr</code> or <code>stdout</code>. Amazon SageMakerhyperparameter tuning captures all defined metrics. You specify one metric that a hyperparameter tuning job uses as its objective metric to choose the best training job.",
                                "properties": {
                                    "Name": {
                                        "description": "The name of the metric.",
                                        "maxLength": 255,
                                        "minLength": 1,
                                        "pattern": ".+",
                                        "type": "string"
                                    },
                                    "Regex": {
                                        "description": "A regular expression that searches the output of a training job and gets the value of the metric. For more information about using regular expressions to define metrics, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-metrics.html\">Defining Objective Metrics</a>.",
                                        "maxLength": 500,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "Regex"
                                ],
                                "type": "object"
                            },
                            "maxItems": 20,
                            "minItems": 0,
                            "type": "array"
                        },
                        "SupportedHyperParameters": {
                            "description": "A list of the <code>HyperParameterSpecification</code> objects, that define the supported hyperparameters. This is required if the algorithm supports automatic model tuning.&gt;",
                            "items": {
                                "description": "Defines a hyperparameter to be used by an algorithm.",
                                "properties": {
                                    "DefaultValue": {
                                        "description": "The default value for this hyperparameter. If a default value is specified, a hyperparameter cannot be required.",
                                        "maxLength": 256,
                                        "pattern": ".*",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "A brief description of the hyperparameter.",
                                        "maxLength": 1024,
                                        "pattern": "[\\p{L}\\p{M}\\p{Z}\\p{S}\\p{N}\\p{P}]*",
                                        "type": "string"
                                    },
                                    "IsRequired": {
                                        "description": "Indicates whether this hyperparameter is required.",
                                        "type": "boolean"
                                    },
                                    "IsTunable": {
                                        "description": "Indicates whether this hyperparameter is tunable in a hyperparameter tuning job.",
                                        "type": "boolean"
                                    },
                                    "Name": {
                                        "description": "The name of this hyperparameter. The name must be unique.",
                                        "maxLength": 256,
                                        "pattern": "[\\p{L}\\p{M}\\p{Z}\\p{S}\\p{N}\\p{P}]*",
                                        "type": "string"
                                    },
                                    "Range": {
                                        "description": "The allowed range for this hyperparameter.",
                                        "properties": {
                                            "CategoricalParameterRangeSpecification": {
                                                "description": "A <code>CategoricalParameterRangeSpecification</code> object that defines the possible values for a categorical hyperparameter.",
                                                "properties": {
                                                    "Values": {
                                                        "description": "The allowed categories for the hyperparameter.",
                                                        "items": {
                                                            "maxLength": 256,
                                                            "pattern": ".*",
                                                            "type": "string"
                                                        },
                                                        "maxItems": 20,
                                                        "minItems": 1,
                                                        "type": "array"
                                                    }
                                                },
                                                "required": [
                                                    "Values"
                                                ],
                                                "type": "object"
                                            },
                                            "ContinuousParameterRangeSpecification": {
                                                "description": "A <code>ContinuousParameterRangeSpecification</code> object that defines the possible values for a continuous hyperparameter.",
                                                "properties": {
                                                    "MaxValue": {
                                                        "description": "The maximum floating-point value allowed.",
                                                        "maxLength": 256,
                                                        "pattern": ".*",
                                                        "type": "string"
                                                    },
                                                    "MinValue": {
                                                        "description": "The minimum floating-point value allowed.",
                                                        "maxLength": 256,
                                                        "pattern": ".*",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "MinValue",
                                                    "MaxValue"
                                                ],
                                                "type": "object"
                                            },
                                            "IntegerParameterRangeSpecification": {
                                                "description": "A <code>IntegerParameterRangeSpecification</code> object that defines the possible values for an integer hyperparameter.",
                                                "properties": {
                                                    "MaxValue": {
                                                        "description": "The maximum integer value allowed.",
                                                        "maxLength": 256,
                                                        "pattern": ".*",
                                                        "type": "string"
                                                    },
                                                    "MinValue": {
                                                        "description": "The minimum integer value allowed.",
                                                        "maxLength": 256,
                                                        "pattern": ".*",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "MinValue",
                                                    "MaxValue"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Type": {
                                        "description": "The type of this hyperparameter. The valid types are <code>Integer</code>, <code>Continuous</code>, <code>Categorical</code>, and <code>FreeText</code>.",
                                        "enum": [
                                            "Integer",
                                            "Continuous",
                                            "Categorical",
                                            "FreeText"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "Type"
                                ],
                                "type": "object"
                            },
                            "maxItems": 100,
                            "minItems": 0,
                            "type": "array"
                        },
                        "SupportedTrainingInstanceTypes": {
                            "description": "A list of the instance types that this algorithm can use for training.",
                            "items": {
                                "enum": [
                                    "ml.m4.xlarge",
                                    "ml.m4.2xlarge",
                                    "ml.m4.4xlarge",
                                    "ml.m4.10xlarge",
                                    "ml.m4.16xlarge",
                                    "ml.m5.large",
                                    "ml.m5.xlarge",
                                    "ml.m5.2xlarge",
                                    "ml.m5.4xlarge",
                                    "ml.m5.12xlarge",
                                    "ml.m5.24xlarge",
                                    "ml.c4.xlarge",
                                    "ml.c4.2xlarge",
                                    "ml.c4.4xlarge",
                                    "ml.c4.8xlarge",
                                    "ml.p2.xlarge",
                                    "ml.p2.8xlarge",
                                    "ml.p2.16xlarge",
                                    "ml.p3.2xlarge",
                                    "ml.p3.8xlarge",
                                    "ml.p3.16xlarge",
                                    "ml.c5.xlarge",
                                    "ml.c5.2xlarge",
                                    "ml.c5.4xlarge",
                                    "ml.c5.9xlarge",
                                    "ml.c5.18xlarge"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "SupportedTuningJobObjectiveMetrics": {
                            "description": "A list of the metrics that the algorithm emits that can be used as the objective metric in a hyperparameter tuning job.",
                            "items": {
                                "description": "Defines the objective metric for a hyperparameter tuning job. Hyperparameter tuning uses the value of this metric to evaluate the training jobs it launches, and returns the training job that results in either the highest or lowest value for this metric, depending on the value you specify for the <code>Type</code> parameter.",
                                "properties": {
                                    "MetricName": {
                                        "description": "The name of the metric to use for the objective metric.",
                                        "maxLength": 255,
                                        "minLength": 1,
                                        "pattern": ".+",
                                        "type": "string"
                                    },
                                    "Type": {
                                        "description": "Whether to minimize or maximize the objective metric.",
                                        "enum": [
                                            "Maximize",
                                            "Minimize"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Type",
                                    "MetricName"
                                ],
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "SupportsDistributedTraining": {
                            "description": "Indicates whether the algorithm supports distributed training. If set to false, buyers can’t request more than one instance during training.",
                            "type": "boolean"
                        },
                        "TrainingChannels": {
                            "description": "A list of <code>ChannelSpecification</code> objects, which specify the input sources to be used by the algorithm.",
                            "items": {
                                "description": "Defines a named input source, called a channel, to be used by an algorithm.",
                                "properties": {
                                    "Description": {
                                        "description": "A brief description of the channel.",
                                        "maxLength": 1024,
                                        "pattern": "[\\p{L}\\p{M}\\p{Z}\\p{S}\\p{N}\\p{P}]*",
                                        "type": "string"
                                    },
                                    "IsRequired": {
                                        "description": "Indicates whether the channel is required by the algorithm.",
                                        "type": "boolean"
                                    },
                                    "Name": {
                                        "description": "The name of the channel.",
                                        "maxLength": 64,
                                        "minLength": 1,
                                        "pattern": "[A-Za-z0-9\\.\\-_]+",
                                        "type": "string"
                                    },
                                    "SupportedCompressionTypes": {
                                        "description": "The allowed compression types, if data compression is used.",
                                        "items": {
                                            "enum": [
                                                "None",
                                                "Gzip"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "SupportedContentTypes": {
                                        "description": "The supported MIME types for the data.",
                                        "items": {
                                            "maxLength": 256,
                                            "pattern": ".*",
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "SupportedInputModes": {
                                        "description": "<p>The allowed input mode, either FILE or PIPE.</p> <p>In FILE mode, Amazon SageMaker copies the data from the input source onto the local Amazon Elastic Block Store (Amazon EBS) volumes before starting your training algorithm. This is the most commonly used input mode.</p> <p>In PIPE mode, Amazon SageMaker streams input data from the source directly to your algorithm without using the EBS volume.</p>",
                                        "items": {
                                            "enum": [
                                                "Pipe",
                                                "File"
                                            ],
                                            "type": "string"
                                        },
                                        "minItems": 1,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "SupportedContentTypes",
                                    "SupportedInputModes"
                                ],
                                "type": "object"
                            },
                            "maxItems": 8,
                            "minItems": 1,
                            "type": "array"
                        },
                        "TrainingImage": {
                            "description": "The Amazon ECR registry path of the Docker image that contains the training algorithm.",
                            "maxLength": 255,
                            "pattern": "[\\S]+",
                            "type": "string"
                        },
                        "TrainingImageDigest": {
                            "description": "An MD5 hash of the training algorithm that identifies the Docker image used for training.",
                            "maxLength": 72,
                            "pattern": "^[Ss][Hh][Aa]256:[0-9a-fA-F]{64}$",
                            "type": "string"
                        }
                    },
                    "required": [
                        "TrainingImage",
                        "SupportedTrainingInstanceTypes",
                        "TrainingChannels"
                    ],
                    "type": "object"
                },
                "ValidationSpecification": {
                    "description": "Specifies configurations for one or more training jobs and that Amazon SageMaker runs to test the algorithm's training code and, optionally, one or more batch transform jobs that Amazon SageMaker runs to test the algorithm's inference code.",
                    "properties": {
                        "ValidationProfiles": {
                            "description": "An array of <code>AlgorithmValidationProfile</code> objects, each of which specifies a training job and batch transform job that Amazon SageMaker runs to validate your algorithm.",
                            "items": {
                                "description": "<p>Defines a training job and a batch transform job that Amazon SageMaker runs to validate your algorithm.</p> <p>The data provided in the validation profile is made available to your buyers on AWS Marketplace.</p>",
                                "properties": {
                                    "ProfileName": {
                                        "description": "The name of the profile for the algorithm. The name must have 1 to 63 characters. Valid characters are a-z, A-Z, 0-9, and - (hyphen).",
                                        "maxLength": 63,
                                        "minLength": 1,
                                        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*$",
                                        "type": "string"
                                    },
                                    "TrainingJobDefinition": {
                                        "description": "The <code>TrainingJobDefinition</code> object that describes the training job that Amazon SageMaker runs to validate your algorithm.",
                                        "properties": {
                                            "HyperParameters": {
                                                "description": "The hyperparameters used for the training job.",
                                                "items": {
                                                    "properties": {
                                                        "key": {
                                                            "maxLength": 256,
                                                            "pattern": ".*",
                                                            "type": "string"
                                                        },
                                                        "value": {
                                                            "maxLength": 256,
                                                            "pattern": ".*",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "maxItems": 100,
                                                "minItems": 0,
                                                "type": "array"
                                            },
                                            "InputDataConfig": {
                                                "description": "An array of <code>Channel</code> objects, each of which specifies an input source.",
                                                "items": {
                                                    "description": "A channel is a named input source that training algorithms can consume. ",
                                                    "properties": {
                                                        "ChannelName": {
                                                            "description": "The name of the channel. ",
                                                            "maxLength": 64,
                                                            "minLength": 1,
                                                            "pattern": "[A-Za-z0-9\\.\\-_]+",
                                                            "type": "string"
                                                        },
                                                        "CompressionType": {
                                                            "description": "If training data is compressed, the compression type. The default value is <code>None</code>. <code>CompressionType</code> is used only in Pipe input mode. In File mode, leave this field unset or set it to None.",
                                                            "enum": [
                                                                "None",
                                                                "Gzip"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "ContentType": {
                                                            "description": "The MIME type of the data.",
                                                            "maxLength": 256,
                                                            "pattern": ".*",
                                                            "type": "string"
                                                        },
                                                        "DataSource": {
                                                            "description": "The location of the channel data.",
                                                            "properties": {
                                                                "S3DataSource": {
                                                                    "description": "The S3 location of the data source that is associated with a channel.",
                                                                    "properties": {
                                                                        "AttributeNames": {
                                                                            "description": "A list of one or more attribute names to use that are found in a specified augmented manifest file.",
                                                                            "items": {
                                                                                "maxLength": 256,
                                                                                "minLength": 1,
                                                                                "pattern": ".+",
                                                                                "type": "string"
                                                                            },
                                                                            "maxItems": 16,
                                                                            "type": "array"
                                                                        },
                                                                        "S3DataDistributionType": {
                                                                            "description": "<p>If you want Amazon SageMaker to replicate the entire dataset on each ML compute instance that is launched for model training, specify <code>FullyReplicated</code>. </p> <p>If you want Amazon SageMaker to replicate a subset of data on each ML compute instance that is launched for model training, specify <code>ShardedByS3Key</code>. If there are <i>n</i> ML compute instances launched for a training job, each instance gets approximately 1/<i>n</i> of the number of S3 objects. In this case, model training on each machine uses only the subset of training data. </p> <p>Don't choose more ML compute instances for training than available S3 objects. If you do, some nodes won't get any data and you will pay for nodes that aren't getting any training data. This applies in both File and Pipe modes. Keep this in mind when developing algorithms. </p> <p>In distributed training, where you use multiple ML compute EC2 instances, you might choose <code>ShardedByS3Key</code>. If the algorithm requires copying training data to the ML storage volume (when <code>TrainingInputMode</code> is set to <code>File</code>), this copies 1/<i>n</i> of the number of objects. </p>",
                                                                            "enum": [
                                                                                "FullyReplicated",
                                                                                "ShardedByS3Key"
                                                                            ],
                                                                            "type": "string"
                                                                        },
                                                                        "S3DataType": {
                                                                            "description": "<p>If you choose <code>S3Prefix</code>, <code>S3Uri</code> identifies a key name prefix. Amazon SageMaker uses all objects that match the specified key name prefix for model training. </p> <p>If you choose <code>ManifestFile</code>, <code>S3Uri</code> identifies an object that is a manifest file containing a list of object keys that you want Amazon SageMaker to use for model training. </p> <p>If you choose <code>AugmentedManifestFile</code>, S3Uri identifies an object that is an augmented manifest file in JSON lines format. This file contains the data you want to use for model training. <code>AugmentedManifestFile</code> can only be used if the Channel's input mode is <code>Pipe</code>.</p>",
                                                                            "enum": [
                                                                                "ManifestFile",
                                                                                "S3Prefix",
                                                                                "AugmentedManifestFile"
                                                                            ],
                                                                            "type": "string"
                                                                        },
                                                                        "S3Uri": {
                                                                            "description": "<p>Depending on the value specified for the <code>S3DataType</code>, identifies either a key name prefix or a manifest. For example: </p> <ul> <li> <p> A key name prefix might look like this: <code>s3://bucketname/exampleprefix</code>. </p> </li> <li> <p> A manifest might look like this: <code>s3://bucketname/example.manifest</code> </p> <p> The manifest is an S3 object which is a JSON file with the following format: </p> <p> <code>[</code> </p> <p> <code> {\"prefix\": \"s3://customer_bucket/some/prefix/\"},</code> </p> <p> <code> \"relative/path/to/custdata-1\",</code> </p> <p> <code> \"relative/path/custdata-2\",</code> </p> <p> <code> ...</code> </p> <p> <code> ]</code> </p> <p> The preceding JSON matches the following <code>s3Uris</code>: </p> <p> <code>s3://customer_bucket/some/prefix/relative/path/to/custdata-1</code> </p> <p> <code>s3://customer_bucket/some/prefix/relative/path/custdata-2</code> </p> <p> <code>...</code> </p> <p>The complete set of <code>s3uris</code> in this manifest is the input data for the channel for this datasource. The object that each <code>s3uris</code> points to must be readable by the IAM role that Amazon SageMaker uses to perform tasks on your behalf. </p> </li> </ul>",
                                                                            "maxLength": 1024,
                                                                            "pattern": "^(https|s3)://([^/]+)/?(.*)$",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "S3DataType",
                                                                        "S3Uri"
                                                                    ],
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "required": [
                                                                "S3DataSource"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "InputMode": {
                                                            "description": "<p>(Optional) The input mode to use for the data channel in a training job. If you don't set a value for <code>InputMode</code>, Amazon SageMaker uses the value set for <code>TrainingInputMode</code>. Use this parameter to override the <code>TrainingInputMode</code> setting in a <a>AlgorithmSpecification</a> request when you have a channel that needs a different input mode from the training job's general setting. To download the data from Amazon Simple Storage Service (Amazon S3) to the provisioned ML storage volume, and mount the directory to a Docker volume, use <code>File</code> input mode. To stream data directly from Amazon S3 to the container, choose <code>Pipe</code> input mode.</p> <p>To use a model for incremental training, choose <code>File</code> input model.</p>",
                                                            "enum": [
                                                                "Pipe",
                                                                "File"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "RecordWrapperType": {
                                                            "description": "<p/> <p>Specify RecordIO as the value when input data is in raw format but the training algorithm requires the RecordIO format. In this case, Amazon SageMaker wraps each individual S3 object in a RecordIO record. If the input data is already in RecordIO format, you don't need to set this attribute. For more information, see <a href=\"https://mxnet.incubator.apache.org/architecture/note_data_loading.html#data-format\">Create a Dataset Using RecordIO</a>. </p> <p>In File mode, leave this field unset or set it to None.</p>",
                                                            "enum": [
                                                                "None",
                                                                "RecordIO"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "ShuffleConfig": {
                                                            "description": "<p>A configuration for a shuffle option for input data in a channel. If you use <code>S3Prefix</code> for <code>S3DataType</code>, this shuffles the results of the S3 key prefix matches. If you use <code>ManifestFile</code>, the order of the S3 object references in the <code>ManifestFile</code> is shuffled. If you use <code>AugmentedManifestFile</code>, the order of the JSON lines in the <code>AugmentedManifestFile</code> is shuffled. The shuffling order is determined using the <code>Seed</code> value.</p> <p>For Pipe input mode, shuffling is done at the start of every epoch. With large datasets this ensures that the order of the training data is different for each epoch, it helps reduce bias and possible overfitting. In a multi-node training job when ShuffleConfig is combined with <code>S3DataDistributionType</code> of <code>ShardedByS3Key</code>, the data is shuffled across nodes so that the content sent to a particular node on the first epoch might be sent to a different node on the second epoch.</p>",
                                                            "properties": {
                                                                "Seed": {
                                                                    "description": "Determines the shuffling order in <code>ShuffleConfig</code> value.",
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "required": [
                                                                "Seed"
                                                            ],
                                                            "type": "object"
                                                        }
                                                    },
                                                    "required": [
                                                        "ChannelName",
                                                        "DataSource"
                                                    ],
                                                    "type": "object"
                                                },
                                                "maxItems": 8,
                                                "minItems": 1,
                                                "type": "array"
                                            },
                                            "OutputDataConfig": {
                                                "description": "the path to the S3 bucket where you want to store model artifacts. Amazon SageMaker creates subfolders for the artifacts.",
                                                "properties": {
                                                    "KmsKeyId": {
                                                        "description": "<p>The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption. The <code>KmsKeyId</code> can be any of the following formats: </p> <ul> <li> <p>// KMS Key ID</p> <p> <code>\"1234abcd-12ab-34cd-56ef-1234567890ab\"</code> </p> </li> <li> <p>// Amazon Resource Name (ARN) of a KMS Key</p> <p> <code>\"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"</code> </p> </li> <li> <p>// KMS Key Alias</p> <p> <code>\"alias/ExampleAlias\"</code> </p> </li> <li> <p>// Amazon Resource Name (ARN) of a KMS Key Alias</p> <p> <code>\"arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias\"</code> </p> </li> </ul> <p>If you don't provide a KMS key ID, Amazon SageMaker uses the default KMS key for Amazon S3 for your role's account. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html\">KMS-Managed Encryption Keys</a> in the <i>Amazon Simple Storage Service Developer Guide.</i> </p> <p>The KMS key policy must grant permission to the IAM role that you specify in your <code>CreateTramsformJob</code> request. For more information, see <a href=\"http://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html\">Using Key Policies in AWS KMS</a> in the <i>AWS Key Management Service Developer Guide</i>.</p>",
                                                        "maxLength": 2048,
                                                        "pattern": ".*",
                                                        "type": "string"
                                                    },
                                                    "S3OutputPath": {
                                                        "description": "Identifies the S3 path where you want Amazon SageMaker to store the model artifacts. For example, <code>s3://bucket-name/key-name-prefix</code>. ",
                                                        "maxLength": 1024,
                                                        "pattern": "^(https|s3)://([^/]+)/?(.*)$",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "S3OutputPath"
                                                ],
                                                "type": "object"
                                            },
                                            "ResourceConfig": {
                                                "description": "The resources, including the ML compute instances and ML storage volumes, to use for model training.",
                                                "properties": {
                                                    "InstanceCount": {
                                                        "description": "The number of ML compute instances to use. For distributed training, provide a value greater than 1. ",
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    },
                                                    "InstanceType": {
                                                        "description": "The ML compute instance type. ",
                                                        "enum": [
                                                            "ml.m4.xlarge",
                                                            "ml.m4.2xlarge",
                                                            "ml.m4.4xlarge",
                                                            "ml.m4.10xlarge",
                                                            "ml.m4.16xlarge",
                                                            "ml.m5.large",
                                                            "ml.m5.xlarge",
                                                            "ml.m5.2xlarge",
                                                            "ml.m5.4xlarge",
                                                            "ml.m5.12xlarge",
                                                            "ml.m5.24xlarge",
                                                            "ml.c4.xlarge",
                                                            "ml.c4.2xlarge",
                                                            "ml.c4.4xlarge",
                                                            "ml.c4.8xlarge",
                                                            "ml.p2.xlarge",
                                                            "ml.p2.8xlarge",
                                                            "ml.p2.16xlarge",
                                                            "ml.p3.2xlarge",
                                                            "ml.p3.8xlarge",
                                                            "ml.p3.16xlarge",
                                                            "ml.c5.xlarge",
                                                            "ml.c5.2xlarge",
                                                            "ml.c5.4xlarge",
                                                            "ml.c5.9xlarge",
                                                            "ml.c5.18xlarge"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "VolumeKmsKeyId": {
                                                        "description": "<p>The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the training job. The <code>VolumeKmsKeyId</code> can be any of the following formats:</p> <ul> <li> <p>// KMS Key ID</p> <p> <code>\"1234abcd-12ab-34cd-56ef-1234567890ab\"</code> </p> </li> <li> <p>// Amazon Resource Name (ARN) of a KMS Key</p> <p> <code>\"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"</code> </p> </li> </ul>",
                                                        "maxLength": 2048,
                                                        "pattern": ".*",
                                                        "type": "string"
                                                    },
                                                    "VolumeSizeInGB": {
                                                        "description": "<p>The size of the ML storage volume that you want to provision. </p> <p>ML storage volumes store model artifacts and incremental states. Training algorithms might also use the ML storage volume for scratch space. If you want to store the training data in the ML storage volume, choose <code>File</code> as the <code>TrainingInputMode</code> in the algorithm specification. </p> <p>You must specify sufficient ML storage for your scenario. </p> <note> <p> Amazon SageMaker supports only the General Purpose SSD (gp2) ML storage volume type. </p> </note>",
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "InstanceType",
                                                    "InstanceCount",
                                                    "VolumeSizeInGB"
                                                ],
                                                "type": "object"
                                            },
                                            "StoppingCondition": {
                                                "description": "<p>Sets a duration for training. Use this parameter to cap model training costs.</p> <p>To stop a job, Amazon SageMaker sends the algorithm the SIGTERM signal, which delays job termination for 120 seconds. Algorithms might use this 120-second window to save the model artifacts.</p>",
                                                "properties": {
                                                    "MaxRuntimeInSeconds": {
                                                        "description": "The maximum length of time, in seconds, that the training job can run. If model training does not complete during this time, Amazon SageMaker ends the job. If value is not specified, default value is 1 day. Maximum value is 28 days.",
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "TrainingInputMode": {
                                                "description": "<p>The input mode used by the algorithm for the training job. For the input modes that Amazon SageMaker algorithms support, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html\">Algorithms</a>.</p> <p>If an algorithm supports the <code>File</code> input mode, Amazon SageMaker downloads the training data from S3 to the provisioned ML storage Volume, and mounts the directory to docker volume for training container. If an algorithm supports the <code>Pipe</code> input mode, Amazon SageMaker streams data directly from S3 to the container.</p>",
                                                "enum": [
                                                    "Pipe",
                                                    "File"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "TrainingInputMode",
                                            "InputDataConfig",
                                            "OutputDataConfig",
                                            "ResourceConfig",
                                            "StoppingCondition"
                                        ],
                                        "type": "object"
                                    },
                                    "TransformJobDefinition": {
                                        "description": "The <code>TransformJobDefinition</code> object that describes the transform job that Amazon SageMaker runs to validate your algorithm.",
                                        "properties": {
                                            "BatchStrategy": {
                                                "description": "<p>A string that determines the number of records included in a single mini-batch.</p> <p> <code>SingleRecord</code> means only one record is used per mini-batch. <code>MultiRecord</code> means a mini-batch is set to contain as many records that can fit within the <code>MaxPayloadInMB</code> limit.</p>",
                                                "enum": [
                                                    "MultiRecord",
                                                    "SingleRecord"
                                                ],
                                                "type": "string"
                                            },
                                            "Environment": {
                                                "description": "The environment variables to set in the Docker container. We support up to 16 key and values entries in the map.",
                                                "items": {
                                                    "properties": {
                                                        "key": {
                                                            "maxLength": 1024,
                                                            "pattern": "[a-zA-Z_][a-zA-Z0-9_]*",
                                                            "type": "string"
                                                        },
                                                        "value": {
                                                            "maxLength": 10240,
                                                            "pattern": "[\\S\\s]*",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "maxItems": 16,
                                                "type": "array"
                                            },
                                            "MaxConcurrentTransforms": {
                                                "description": "The maximum number of parallel requests that can be sent to each instance in a transform job. The default value is 1.",
                                                "minimum": 0,
                                                "type": "integer"
                                            },
                                            "MaxPayloadInMB": {
                                                "description": "The maximum payload size allowed, in MB. A payload is the data portion of a record (without metadata).",
                                                "minimum": 0,
                                                "type": "integer"
                                            },
                                            "TransformInput": {
                                                "description": "A description of the input source and the way the transform job consumes it.",
                                                "properties": {
                                                    "CompressionType": {
                                                        "description": "If your transform data is compressed, specify the compression type. Amazon SageMaker automatically decompresses the data for the transform job accordingly. The default value is <code>None</code>.",
                                                        "enum": [
                                                            "None",
                                                            "Gzip"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "ContentType": {
                                                        "description": "The multipurpose internet mail extension (MIME) type of the data. Amazon SageMaker uses the MIME type with each http call to transfer data to the transform job.",
                                                        "maxLength": 256,
                                                        "pattern": ".*",
                                                        "type": "string"
                                                    },
                                                    "DataSource": {
                                                        "description": "Describes the location of the channel data, which is, the S3 location of the input data that the model can consume.",
                                                        "properties": {
                                                            "S3DataSource": {
                                                                "description": "The S3 location of the data source that is associated with a channel.",
                                                                "properties": {
                                                                    "S3DataType": {
                                                                        "description": "<p>If you choose <code>S3Prefix</code>, <code>S3Uri</code> identifies a key name prefix. Amazon SageMaker uses all objects with the specified key name prefix for batch transform. </p> <p>If you choose <code>ManifestFile</code>, <code>S3Uri</code> identifies an object that is a manifest file containing a list of object keys that you want Amazon SageMaker to use for batch transform. </p>",
                                                                        "enum": [
                                                                            "ManifestFile",
                                                                            "S3Prefix",
                                                                            "AugmentedManifestFile"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "S3Uri": {
                                                                        "description": "<p>Depending on the value specified for the <code>S3DataType</code>, identifies either a key name prefix or a manifest. For example:</p> <ul> <li> <p> A key name prefix might look like this: <code>s3://bucketname/exampleprefix</code>. </p> </li> <li> <p> A manifest might look like this: <code>s3://bucketname/example.manifest</code> </p> <p> The manifest is an S3 object which is a JSON file with the following format: </p> <p> <code>[</code> </p> <p> <code> {\"prefix\": \"s3://customer_bucket/some/prefix/\"},</code> </p> <p> <code> \"relative/path/to/custdata-1\",</code> </p> <p> <code> \"relative/path/custdata-2\",</code> </p> <p> <code> ...</code> </p> <p> <code> ]</code> </p> <p> The preceding JSON matches the following <code>S3Uris</code>: </p> <p> <code>s3://customer_bucket/some/prefix/relative/path/to/custdata-1</code> </p> <p> <code>s3://customer_bucket/some/prefix/relative/path/custdata-1</code> </p> <p> <code>...</code> </p> <p> The complete set of <code>S3Uris</code> in this manifest constitutes the input data for the channel for this datasource. The object that each <code>S3Uris</code> points to must be readable by the IAM role that Amazon SageMaker uses to perform tasks on your behalf.</p> </li> </ul>",
                                                                        "maxLength": 1024,
                                                                        "pattern": "^(https|s3)://([^/]+)/?(.*)$",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "S3DataType",
                                                                    "S3Uri"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "required": [
                                                            "S3DataSource"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "SplitType": {
                                                        "description": "<p>The method to use to split the transform job's data files into smaller batches. Splitting is necessary when the total size of each object is too large to fit in a single request. You can also use data splitting to improve performance by processing multiple concurrent mini-batches. The default value for <code>SplitType</code> is <code>None</code>, which indicates that input data files are not split, and request payloads contain the entire contents of an input object. Set the value of this parameter to <code>Line</code> to split records on a newline character boundary. <code>SplitType</code> also supports a number of record-oriented binary data formats.</p> <p>When splitting is enabled, the size of a mini-batch depends on the values of the <code>BatchStrategy</code> and <code>MaxPayloadInMB</code> parameters. When the value of <code>BatchStrategy</code> is <code>MultiRecord</code>, Amazon SageMaker sends the maximum number of records in each request, up to the <code>MaxPayloadInMB</code> limit. If the value of <code>BatchStrategy</code> is <code>SingleRecord</code>, Amazon SageMaker sends individual records in each request.</p> <note> <p>Some data formats represent a record as a binary payload wrapped with extra padding bytes. When splitting is applied to a binary data format, padding is removed if the value of <code>BatchStrategy</code> is set to <code>SingleRecord</code>. Padding is not removed if the value of <code>BatchStrategy</code> is set to <code>MultiRecord</code>.</p> <p>For more information about the RecordIO, see <a href=\"http://mxnet.io/architecture/note_data_loading.html#data-format\">Data Format</a> in the MXNet documentation. For more information about the TFRecord, see <a href=\"https://www.tensorflow.org/guide/datasets#consuming_tfrecord_data\">Consuming TFRecord data</a> in the TensorFlow documentation.</p> </note>",
                                                        "enum": [
                                                            "None",
                                                            "Line",
                                                            "RecordIO",
                                                            "TFRecord"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "DataSource"
                                                ],
                                                "type": "object"
                                            },
                                            "TransformOutput": {
                                                "description": "Identifies the Amazon S3 location where you want Amazon SageMaker to save the results from the transform job.",
                                                "properties": {
                                                    "Accept": {
                                                        "description": "The MIME type used to specify the output data. Amazon SageMaker uses the MIME type with each http call to transfer data from the transform job.",
                                                        "maxLength": 256,
                                                        "pattern": ".*",
                                                        "type": "string"
                                                    },
                                                    "AssembleWith": {
                                                        "description": "Defines how to assemble the results of the transform job as a single S3 object. Choose a format that is most convenient to you. To concatenate the results in binary format, specify <code>None</code>. To add a newline character at the end of every transformed record, specify <code>Line</code>.",
                                                        "enum": [
                                                            "None",
                                                            "Line"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "KmsKeyId": {
                                                        "description": "<p>The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption. The <code>KmsKeyId</code> can be any of the following formats: </p> <ul> <li> <p>// KMS Key ID</p> <p> <code>\"1234abcd-12ab-34cd-56ef-1234567890ab\"</code> </p> </li> <li> <p>// Amazon Resource Name (ARN) of a KMS Key</p> <p> <code>\"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"</code> </p> </li> <li> <p>// KMS Key Alias</p> <p> <code>\"alias/ExampleAlias\"</code> </p> </li> <li> <p>// Amazon Resource Name (ARN) of a KMS Key Alias</p> <p> <code>\"arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias\"</code> </p> </li> </ul> <p>If you don't provide a KMS key ID, Amazon SageMaker uses the default KMS key for Amazon S3 for your role's account. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html\">KMS-Managed Encryption Keys</a> in the <i>Amazon Simple Storage Service Developer Guide.</i> </p> <p>The KMS key policy must grant permission to the IAM role that you specify in your <code>CreateTramsformJob</code> request. For more information, see <a href=\"http://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html\">Using Key Policies in AWS KMS</a> in the <i>AWS Key Management Service Developer Guide</i>.</p>",
                                                        "maxLength": 2048,
                                                        "pattern": ".*",
                                                        "type": "string"
                                                    },
                                                    "S3OutputPath": {
                                                        "description": "<p>The Amazon S3 path where you want Amazon SageMaker to store the results of the transform job. For example, <code>s3://bucket-name/key-name-prefix</code>.</p> <p>For every S3 object used as input for the transform job, batch transform stores the transformed data with an .<code>out</code> suffix in a corresponding subfolder in the location in the output prefix. For example, for the input data stored at <code>s3://bucket-name/input-name-prefix/dataset01/data.csv</code>, batch transform stores the transformed data at <code>s3://bucket-name/output-name-prefix/input-name-prefix/data.csv.out</code>. Batch transform doesn't upload partially processed objects. For an input S3 object that contains multiple records, it creates an .<code>out</code> file only if the transform job succeeds on the entire file. When the input contains multiple S3 objects, the batch transform job processes the listed S3 objects and uploads only the output for successfully processed objects. If any object fails in the transform job batch transform marks the job as failed to prompt investigation.</p>",
                                                        "maxLength": 1024,
                                                        "pattern": "^(https|s3)://([^/]+)/?(.*)$",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "S3OutputPath"
                                                ],
                                                "type": "object"
                                            },
                                            "TransformResources": {
                                                "description": "Identifies the ML compute instances for the transform job.",
                                                "properties": {
                                                    "InstanceCount": {
                                                        "description": "The number of ML compute instances to use in the transform job. For distributed transform, provide a value greater than 1. The default value is <code>1</code>.",
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    },
                                                    "InstanceType": {
                                                        "description": "The ML compute instance type for the transform job. For using built-in algorithms to transform moderately sized datasets, ml.m4.xlarge or <code>ml.m5.large</code> should suffice. There is no default value for <code>InstanceType</code>.",
                                                        "enum": [
                                                            "ml.m4.xlarge",
                                                            "ml.m4.2xlarge",
                                                            "ml.m4.4xlarge",
                                                            "ml.m4.10xlarge",
                                                            "ml.m4.16xlarge",
                                                            "ml.c4.xlarge",
                                                            "ml.c4.2xlarge",
                                                            "ml.c4.4xlarge",
                                                            "ml.c4.8xlarge",
                                                            "ml.p2.xlarge",
                                                            "ml.p2.8xlarge",
                                                            "ml.p2.16xlarge",
                                                            "ml.p3.2xlarge",
                                                            "ml.p3.8xlarge",
                                                            "ml.p3.16xlarge",
                                                            "ml.c5.xlarge",
                                                            "ml.c5.2xlarge",
                                                            "ml.c5.4xlarge",
                                                            "ml.c5.9xlarge",
                                                            "ml.c5.18xlarge",
                                                            "ml.m5.large",
                                                            "ml.m5.xlarge",
                                                            "ml.m5.2xlarge",
                                                            "ml.m5.4xlarge",
                                                            "ml.m5.12xlarge",
                                                            "ml.m5.24xlarge"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "VolumeKmsKeyId": {
                                                        "description": "<p>The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the batch transform job. The <code>VolumeKmsKeyId</code> can be any of the following formats:</p> <ul> <li> <p>// KMS Key ID</p> <p> <code>\"1234abcd-12ab-34cd-56ef-1234567890ab\"</code> </p> </li> <li> <p>// Amazon Resource Name (ARN) of a KMS Key</p> <p> <code>\"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"</code> </p> </li> </ul>",
                                                        "maxLength": 2048,
                                                        "pattern": ".*",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "InstanceType",
                                                    "InstanceCount"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "required": [
                                            "TransformInput",
                                            "TransformOutput",
                                            "TransformResources"
                                        ],
                                        "type": "object"
                                    }
                                },
                                "required": [
                                    "ProfileName",
                                    "TrainingJobDefinition"
                                ],
                                "type": "object"
                            },
                            "maxItems": 1,
                            "minItems": 1,
                            "type": "array"
                        },
                        "ValidationRole": {
                            "description": "The IAM roles that Amazon SageMaker uses to run the training jobs.",
                            "maxLength": 2048,
                            "minLength": 20,
                            "pattern": "^arn:aws[a-z\\-]*:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$",
                            "type": "string"
                        }
                    },
                    "required": [
                        "ValidationRole",
                        "ValidationProfiles"
                    ],
                    "type": "object"
                }
            },
            "required": [
                "AlgorithmName",
                "TrainingSpecification"
            ],
            "type": "object"
        },
        "X_Amz_Content_Sha256": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Date": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Algorithm": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Credential": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Security_Token": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Signature": {
            "required": false,
            "type": "string"
        },
        "X_Amz_SignedHeaders": {
            "required": false,
            "type": "string"
        }
    }
}