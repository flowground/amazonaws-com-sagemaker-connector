{
    "type": "object",
    "properties": {
        "Action": {
            "required": true,
            "type": "string"
        },
        "Version": {
            "required": true,
            "type": "string"
        },
        "requestBody": {
            "properties": {
                "AlgorithmSpecification": {
                    "description": "The registry path of the Docker image that contains the training algorithm and algorithm-specific metadata, including the input mode. For more information about algorithms provided by Amazon SageMaker, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html\">Algorithms</a>. For information about providing your own algorithms, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms.html\">Using Your Own Algorithms with Amazon SageMaker</a>. ",
                    "properties": {
                        "AlgorithmName": {
                            "description": "The name of the algorithm resource to use for the training job. This must be an algorithm resource that you created or subscribe to on AWS Marketplace. If you specify a value for this parameter, you can't specify a value for <code>TrainingImage</code>.",
                            "maxLength": 170,
                            "minLength": 1,
                            "pattern": "(arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:[a-z\\-]*\\/)?([a-zA-Z0-9]([a-zA-Z0-9-]){0,62})(?<!-)$",
                            "type": "string"
                        },
                        "MetricDefinitions": {
                            "description": "A list of metric definition objects. Each object specifies the metric name and regular expressions used to parse algorithm logs. Amazon SageMaker publishes each metric to Amazon CloudWatch.",
                            "items": {
                                "description": "Specifies a metric that the training algorithm writes to <code>stderr</code> or <code>stdout</code>. Amazon SageMakerhyperparameter tuning captures all defined metrics. You specify one metric that a hyperparameter tuning job uses as its objective metric to choose the best training job.",
                                "properties": {
                                    "Name": {
                                        "description": "The name of the metric.",
                                        "maxLength": 255,
                                        "minLength": 1,
                                        "pattern": ".+",
                                        "type": "string"
                                    },
                                    "Regex": {
                                        "description": "A regular expression that searches the output of a training job and gets the value of the metric. For more information about using regular expressions to define metrics, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-metrics.html\">Defining Objective Metrics</a>.",
                                        "maxLength": 500,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "Regex"
                                ],
                                "type": "object"
                            },
                            "maxItems": 20,
                            "minItems": 0,
                            "type": "array"
                        },
                        "TrainingImage": {
                            "description": "The registry path of the Docker image that contains the training algorithm. For information about docker registry paths for built-in algorithms, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-algo-docker-registry-paths.html\">Algorithms Provided by Amazon SageMaker: Common Parameters</a>. Amazon SageMaker supports both <code>registry/repository[:tag]</code> and <code>registry/repository[@digest]</code> image path formats. For more information, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms.html\">Using Your Own Algorithms with Amazon SageMaker</a>.",
                            "maxLength": 255,
                            "pattern": ".*",
                            "type": "string"
                        },
                        "TrainingInputMode": {
                            "description": "<p>The input mode that the algorithm supports. For the input modes that Amazon SageMaker algorithms support, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html\">Algorithms</a>. If an algorithm supports the <code>File</code> input mode, Amazon SageMaker downloads the training data from S3 to the provisioned ML storage Volume, and mounts the directory to docker volume for training container. If an algorithm supports the <code>Pipe</code> input mode, Amazon SageMaker streams data directly from S3 to the container. </p> <p> In File mode, make sure you provision ML storage volume with sufficient capacity to accommodate the data download from S3. In addition to the training data, the ML storage volume also stores the output model. The algorithm container use ML storage volume to also store intermediate information, if any. </p> <p> For distributed algorithms using File mode, training data is distributed uniformly, and your training duration is predictable if the input data objects size is approximately same. Amazon SageMaker does not split the files any further for model training. If the object sizes are skewed, training won't be optimal as the data distribution is also skewed where one host in a training cluster is overloaded, thus becoming bottleneck in training. </p>",
                            "enum": [
                                "Pipe",
                                "File"
                            ],
                            "type": "string"
                        }
                    },
                    "required": [
                        "TrainingInputMode"
                    ],
                    "type": "object"
                },
                "EnableInterContainerTrafficEncryption": {
                    "description": "To encrypt all communications between ML compute instances in distributed training, choose <code>True</code>. Encryption provides greater security for distributed training, but training might take longer. How long it takes depends on the amount of communication between compute instances, especially if you use a deep learning algorithm in distributed training. For more information, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/train-encrypt.html\">Protect Communications Between ML Compute Instances in a Distributed Training Job</a>.",
                    "type": "boolean"
                },
                "EnableNetworkIsolation": {
                    "description": "<p>Isolates the training container. No inbound or outbound network calls can be made, except for calls between peers within a training cluster for distributed training. If you enable network isolation for training jobs that are configured to use a VPC, Amazon SageMaker downloads and uploads customer data and model artifacts through the specified VPC, but the training container does not have network access.</p> <note> <p>The Semantic Segmentation built-in algorithm does not support network isolation.</p> </note>",
                    "type": "boolean"
                },
                "HyperParameters": {
                    "description": "<p>Algorithm-specific parameters that influence the quality of the model. You set hyperparameters before you start the learning process. For a list of hyperparameters for each training algorithm provided by Amazon SageMaker, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html\">Algorithms</a>. </p> <p>You can specify a maximum of 100 hyperparameters. Each hyperparameter is a key-value pair. Each key and value is limited to 256 characters, as specified by the <code>Length Constraint</code>. </p>",
                    "items": {
                        "properties": {
                            "key": {
                                "maxLength": 256,
                                "pattern": ".*",
                                "type": "string"
                            },
                            "value": {
                                "maxLength": 256,
                                "pattern": ".*",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "maxItems": 100,
                    "minItems": 0,
                    "type": "array"
                },
                "InputDataConfig": {
                    "description": "<p>An array of <code>Channel</code> objects. Each channel is a named input source. <code>InputDataConfig</code> describes the input data and its location. </p> <p>Algorithms can accept input data from one or more channels. For example, an algorithm might have two channels of input data, <code>training_data</code> and <code>validation_data</code>. The configuration for each channel provides the S3 location where the input data is stored. It also provides information about the stored data: the MIME type, compression method, and whether the data is wrapped in RecordIO format. </p> <p>Depending on the input mode that the algorithm supports, Amazon SageMaker either copies input data files from an S3 bucket to a local directory in the Docker container, or makes it available as input streams. </p>",
                    "items": {
                        "description": "A channel is a named input source that training algorithms can consume. ",
                        "properties": {
                            "ChannelName": {
                                "description": "The name of the channel. ",
                                "maxLength": 64,
                                "minLength": 1,
                                "pattern": "[A-Za-z0-9\\.\\-_]+",
                                "type": "string"
                            },
                            "CompressionType": {
                                "description": "If training data is compressed, the compression type. The default value is <code>None</code>. <code>CompressionType</code> is used only in Pipe input mode. In File mode, leave this field unset or set it to None.",
                                "enum": [
                                    "None",
                                    "Gzip"
                                ],
                                "type": "string"
                            },
                            "ContentType": {
                                "description": "The MIME type of the data.",
                                "maxLength": 256,
                                "pattern": ".*",
                                "type": "string"
                            },
                            "DataSource": {
                                "description": "The location of the channel data.",
                                "properties": {
                                    "S3DataSource": {
                                        "description": "The S3 location of the data source that is associated with a channel.",
                                        "properties": {
                                            "AttributeNames": {
                                                "description": "A list of one or more attribute names to use that are found in a specified augmented manifest file.",
                                                "items": {
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": ".+",
                                                    "type": "string"
                                                },
                                                "maxItems": 16,
                                                "type": "array"
                                            },
                                            "S3DataDistributionType": {
                                                "description": "<p>If you want Amazon SageMaker to replicate the entire dataset on each ML compute instance that is launched for model training, specify <code>FullyReplicated</code>. </p> <p>If you want Amazon SageMaker to replicate a subset of data on each ML compute instance that is launched for model training, specify <code>ShardedByS3Key</code>. If there are <i>n</i> ML compute instances launched for a training job, each instance gets approximately 1/<i>n</i> of the number of S3 objects. In this case, model training on each machine uses only the subset of training data. </p> <p>Don't choose more ML compute instances for training than available S3 objects. If you do, some nodes won't get any data and you will pay for nodes that aren't getting any training data. This applies in both File and Pipe modes. Keep this in mind when developing algorithms. </p> <p>In distributed training, where you use multiple ML compute EC2 instances, you might choose <code>ShardedByS3Key</code>. If the algorithm requires copying training data to the ML storage volume (when <code>TrainingInputMode</code> is set to <code>File</code>), this copies 1/<i>n</i> of the number of objects. </p>",
                                                "enum": [
                                                    "FullyReplicated",
                                                    "ShardedByS3Key"
                                                ],
                                                "type": "string"
                                            },
                                            "S3DataType": {
                                                "description": "<p>If you choose <code>S3Prefix</code>, <code>S3Uri</code> identifies a key name prefix. Amazon SageMaker uses all objects that match the specified key name prefix for model training. </p> <p>If you choose <code>ManifestFile</code>, <code>S3Uri</code> identifies an object that is a manifest file containing a list of object keys that you want Amazon SageMaker to use for model training. </p> <p>If you choose <code>AugmentedManifestFile</code>, S3Uri identifies an object that is an augmented manifest file in JSON lines format. This file contains the data you want to use for model training. <code>AugmentedManifestFile</code> can only be used if the Channel's input mode is <code>Pipe</code>.</p>",
                                                "enum": [
                                                    "ManifestFile",
                                                    "S3Prefix",
                                                    "AugmentedManifestFile"
                                                ],
                                                "type": "string"
                                            },
                                            "S3Uri": {
                                                "description": "<p>Depending on the value specified for the <code>S3DataType</code>, identifies either a key name prefix or a manifest. For example: </p> <ul> <li> <p> A key name prefix might look like this: <code>s3://bucketname/exampleprefix</code>. </p> </li> <li> <p> A manifest might look like this: <code>s3://bucketname/example.manifest</code> </p> <p> The manifest is an S3 object which is a JSON file with the following format: </p> <p> <code>[</code> </p> <p> <code> {\"prefix\": \"s3://customer_bucket/some/prefix/\"},</code> </p> <p> <code> \"relative/path/to/custdata-1\",</code> </p> <p> <code> \"relative/path/custdata-2\",</code> </p> <p> <code> ...</code> </p> <p> <code> ]</code> </p> <p> The preceding JSON matches the following <code>s3Uris</code>: </p> <p> <code>s3://customer_bucket/some/prefix/relative/path/to/custdata-1</code> </p> <p> <code>s3://customer_bucket/some/prefix/relative/path/custdata-2</code> </p> <p> <code>...</code> </p> <p>The complete set of <code>s3uris</code> in this manifest is the input data for the channel for this datasource. The object that each <code>s3uris</code> points to must be readable by the IAM role that Amazon SageMaker uses to perform tasks on your behalf. </p> </li> </ul>",
                                                "maxLength": 1024,
                                                "pattern": "^(https|s3)://([^/]+)/?(.*)$",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "S3DataType",
                                            "S3Uri"
                                        ],
                                        "type": "object"
                                    }
                                },
                                "required": [
                                    "S3DataSource"
                                ],
                                "type": "object"
                            },
                            "InputMode": {
                                "description": "<p>(Optional) The input mode to use for the data channel in a training job. If you don't set a value for <code>InputMode</code>, Amazon SageMaker uses the value set for <code>TrainingInputMode</code>. Use this parameter to override the <code>TrainingInputMode</code> setting in a <a>AlgorithmSpecification</a> request when you have a channel that needs a different input mode from the training job's general setting. To download the data from Amazon Simple Storage Service (Amazon S3) to the provisioned ML storage volume, and mount the directory to a Docker volume, use <code>File</code> input mode. To stream data directly from Amazon S3 to the container, choose <code>Pipe</code> input mode.</p> <p>To use a model for incremental training, choose <code>File</code> input model.</p>",
                                "enum": [
                                    "Pipe",
                                    "File"
                                ],
                                "type": "string"
                            },
                            "RecordWrapperType": {
                                "description": "<p/> <p>Specify RecordIO as the value when input data is in raw format but the training algorithm requires the RecordIO format. In this case, Amazon SageMaker wraps each individual S3 object in a RecordIO record. If the input data is already in RecordIO format, you don't need to set this attribute. For more information, see <a href=\"https://mxnet.incubator.apache.org/architecture/note_data_loading.html#data-format\">Create a Dataset Using RecordIO</a>. </p> <p>In File mode, leave this field unset or set it to None.</p>",
                                "enum": [
                                    "None",
                                    "RecordIO"
                                ],
                                "type": "string"
                            },
                            "ShuffleConfig": {
                                "description": "<p>A configuration for a shuffle option for input data in a channel. If you use <code>S3Prefix</code> for <code>S3DataType</code>, this shuffles the results of the S3 key prefix matches. If you use <code>ManifestFile</code>, the order of the S3 object references in the <code>ManifestFile</code> is shuffled. If you use <code>AugmentedManifestFile</code>, the order of the JSON lines in the <code>AugmentedManifestFile</code> is shuffled. The shuffling order is determined using the <code>Seed</code> value.</p> <p>For Pipe input mode, shuffling is done at the start of every epoch. With large datasets this ensures that the order of the training data is different for each epoch, it helps reduce bias and possible overfitting. In a multi-node training job when ShuffleConfig is combined with <code>S3DataDistributionType</code> of <code>ShardedByS3Key</code>, the data is shuffled across nodes so that the content sent to a particular node on the first epoch might be sent to a different node on the second epoch.</p>",
                                "properties": {
                                    "Seed": {
                                        "description": "Determines the shuffling order in <code>ShuffleConfig</code> value.",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "Seed"
                                ],
                                "type": "object"
                            }
                        },
                        "required": [
                            "ChannelName",
                            "DataSource"
                        ],
                        "type": "object"
                    },
                    "maxItems": 8,
                    "minItems": 1,
                    "type": "array"
                },
                "OutputDataConfig": {
                    "description": "Specifies the path to the S3 bucket where you want to store model artifacts. Amazon SageMaker creates subfolders for the artifacts. ",
                    "properties": {
                        "KmsKeyId": {
                            "description": "<p>The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption. The <code>KmsKeyId</code> can be any of the following formats: </p> <ul> <li> <p>// KMS Key ID</p> <p> <code>\"1234abcd-12ab-34cd-56ef-1234567890ab\"</code> </p> </li> <li> <p>// Amazon Resource Name (ARN) of a KMS Key</p> <p> <code>\"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"</code> </p> </li> <li> <p>// KMS Key Alias</p> <p> <code>\"alias/ExampleAlias\"</code> </p> </li> <li> <p>// Amazon Resource Name (ARN) of a KMS Key Alias</p> <p> <code>\"arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias\"</code> </p> </li> </ul> <p>If you don't provide a KMS key ID, Amazon SageMaker uses the default KMS key for Amazon S3 for your role's account. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html\">KMS-Managed Encryption Keys</a> in the <i>Amazon Simple Storage Service Developer Guide.</i> </p> <p>The KMS key policy must grant permission to the IAM role that you specify in your <code>CreateTramsformJob</code> request. For more information, see <a href=\"http://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html\">Using Key Policies in AWS KMS</a> in the <i>AWS Key Management Service Developer Guide</i>.</p>",
                            "maxLength": 2048,
                            "pattern": ".*",
                            "type": "string"
                        },
                        "S3OutputPath": {
                            "description": "Identifies the S3 path where you want Amazon SageMaker to store the model artifacts. For example, <code>s3://bucket-name/key-name-prefix</code>. ",
                            "maxLength": 1024,
                            "pattern": "^(https|s3)://([^/]+)/?(.*)$",
                            "type": "string"
                        }
                    },
                    "required": [
                        "S3OutputPath"
                    ],
                    "type": "object"
                },
                "ResourceConfig": {
                    "description": "<p>The resources, including the ML compute instances and ML storage volumes, to use for model training. </p> <p>ML storage volumes store model artifacts and incremental states. Training algorithms might also use ML storage volumes for scratch space. If you want Amazon SageMaker to use the ML storage volume to store the training data, choose <code>File</code> as the <code>TrainingInputMode</code> in the algorithm specification. For distributed training algorithms, specify an instance count greater than 1.</p>",
                    "properties": {
                        "InstanceCount": {
                            "description": "The number of ML compute instances to use. For distributed training, provide a value greater than 1. ",
                            "minimum": 1,
                            "type": "integer"
                        },
                        "InstanceType": {
                            "description": "The ML compute instance type. ",
                            "enum": [
                                "ml.m4.xlarge",
                                "ml.m4.2xlarge",
                                "ml.m4.4xlarge",
                                "ml.m4.10xlarge",
                                "ml.m4.16xlarge",
                                "ml.m5.large",
                                "ml.m5.xlarge",
                                "ml.m5.2xlarge",
                                "ml.m5.4xlarge",
                                "ml.m5.12xlarge",
                                "ml.m5.24xlarge",
                                "ml.c4.xlarge",
                                "ml.c4.2xlarge",
                                "ml.c4.4xlarge",
                                "ml.c4.8xlarge",
                                "ml.p2.xlarge",
                                "ml.p2.8xlarge",
                                "ml.p2.16xlarge",
                                "ml.p3.2xlarge",
                                "ml.p3.8xlarge",
                                "ml.p3.16xlarge",
                                "ml.c5.xlarge",
                                "ml.c5.2xlarge",
                                "ml.c5.4xlarge",
                                "ml.c5.9xlarge",
                                "ml.c5.18xlarge"
                            ],
                            "type": "string"
                        },
                        "VolumeKmsKeyId": {
                            "description": "<p>The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the training job. The <code>VolumeKmsKeyId</code> can be any of the following formats:</p> <ul> <li> <p>// KMS Key ID</p> <p> <code>\"1234abcd-12ab-34cd-56ef-1234567890ab\"</code> </p> </li> <li> <p>// Amazon Resource Name (ARN) of a KMS Key</p> <p> <code>\"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"</code> </p> </li> </ul>",
                            "maxLength": 2048,
                            "pattern": ".*",
                            "type": "string"
                        },
                        "VolumeSizeInGB": {
                            "description": "<p>The size of the ML storage volume that you want to provision. </p> <p>ML storage volumes store model artifacts and incremental states. Training algorithms might also use the ML storage volume for scratch space. If you want to store the training data in the ML storage volume, choose <code>File</code> as the <code>TrainingInputMode</code> in the algorithm specification. </p> <p>You must specify sufficient ML storage for your scenario. </p> <note> <p> Amazon SageMaker supports only the General Purpose SSD (gp2) ML storage volume type. </p> </note>",
                            "minimum": 1,
                            "type": "integer"
                        }
                    },
                    "required": [
                        "InstanceType",
                        "InstanceCount",
                        "VolumeSizeInGB"
                    ],
                    "type": "object"
                },
                "RoleArn": {
                    "description": "<p>The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf. </p> <p>During model training, Amazon SageMaker needs your permission to read input data from an S3 bucket, download a Docker image that contains training code, write model artifacts to an S3 bucket, write logs to Amazon CloudWatch Logs, and publish metrics to Amazon CloudWatch. You grant permissions for all of these tasks to an IAM role. For more information, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html\">Amazon SageMaker Roles</a>. </p> <note> <p>To be able to pass this role to Amazon SageMaker, the caller of this API must have the <code>iam:PassRole</code> permission.</p> </note>",
                    "maxLength": 2048,
                    "minLength": 20,
                    "pattern": "^arn:aws[a-z\\-]*:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$",
                    "type": "string"
                },
                "StoppingCondition": {
                    "description": "<p>Sets a duration for training. Use this parameter to cap model training costs. To stop a job, Amazon SageMaker sends the algorithm the <code>SIGTERM</code> signal, which delays job termination for 120 seconds. Algorithms might use this 120-second window to save the model artifacts. </p> <p>When Amazon SageMaker terminates a job because the stopping condition has been met, training algorithms provided by Amazon SageMaker save the intermediate results of the job. This intermediate data is a valid model artifact. You can use it to create a model using the <code>CreateModel</code> API. </p>",
                    "properties": {
                        "MaxRuntimeInSeconds": {
                            "description": "The maximum length of time, in seconds, that the training job can run. If model training does not complete during this time, Amazon SageMaker ends the job. If value is not specified, default value is 1 day. Maximum value is 28 days.",
                            "minimum": 1,
                            "type": "integer"
                        }
                    },
                    "type": "object"
                },
                "Tags": {
                    "description": "An array of key-value pairs. For more information, see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what\">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>. ",
                    "items": {
                        "description": "Describes a tag. ",
                        "properties": {
                            "Key": {
                                "description": "The tag key.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                "type": "string"
                            },
                            "Value": {
                                "description": "The tag value.",
                                "maxLength": 256,
                                "minLength": 0,
                                "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                "type": "string"
                            }
                        },
                        "required": [
                            "Key",
                            "Value"
                        ],
                        "type": "object"
                    },
                    "maxItems": 50,
                    "minItems": 0,
                    "type": "array"
                },
                "TrainingJobName": {
                    "description": "The name of the training job. The name must be unique within an AWS Region in an AWS account. ",
                    "maxLength": 63,
                    "minLength": 1,
                    "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
                    "type": "string"
                },
                "VpcConfig": {
                    "description": "A <a>VpcConfig</a> object that specifies the VPC that you want your training job to connect to. Control access to and from your training container by configuring the VPC. For more information, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html\">Protect Training Jobs by Using an Amazon Virtual Private Cloud</a>.",
                    "properties": {
                        "SecurityGroupIds": {
                            "description": "The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the <code>Subnets</code> field.",
                            "items": {
                                "maxLength": 32,
                                "pattern": "[-0-9a-zA-Z]+",
                                "type": "string"
                            },
                            "maxItems": 5,
                            "minItems": 1,
                            "type": "array"
                        },
                        "Subnets": {
                            "description": "The ID of the subnets in the VPC to which you want to connect your training job or model. ",
                            "items": {
                                "maxLength": 32,
                                "pattern": "[-0-9a-zA-Z]+",
                                "type": "string"
                            },
                            "maxItems": 16,
                            "minItems": 1,
                            "type": "array"
                        }
                    },
                    "required": [
                        "SecurityGroupIds",
                        "Subnets"
                    ],
                    "type": "object"
                }
            },
            "required": [
                "TrainingJobName",
                "AlgorithmSpecification",
                "RoleArn",
                "OutputDataConfig",
                "ResourceConfig",
                "StoppingCondition"
            ],
            "type": "object"
        },
        "X_Amz_Content_Sha256": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Date": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Algorithm": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Credential": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Security_Token": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Signature": {
            "required": false,
            "type": "string"
        },
        "X_Amz_SignedHeaders": {
            "required": false,
            "type": "string"
        }
    }
}